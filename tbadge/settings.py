"""
Django settings for tbadge_portal project.

Generated by 'django-admin startproject' using Django 1.9.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Version
BUILD_ENV = os.environ.get('ENV', 'LOCAL')
BUILD_NUMBER = os.environ.get('BUILD_NUMBER', 0)  # Jenkins Build Number
RELEASE = '0'        # Each development milestone  QA/UAT
MINOR_VERSION = '0'  # +1 for every time we go public"
MAJOR_VERSION = '1'  # Significant change. Business Approval Required
VERSION = '{} {}.{}.{}.{}'.format(BUILD_ENV, MAJOR_VERSION, MINOR_VERSION, RELEASE, BUILD_NUMBER)

# Test Users - Default to not allowed
ALLOW_TEST_USER = False

# Under Construction Flag - Toggle this flag to prevent users from logging into TABS
UNDER_CONSTRUCTION = False

# Session Settings
if BUILD_ENV != 'LOCAL' and BUILD_ENV != 'DEV':
    SESSION_EXPIRE_AT_BROWSER_CLOSE = True
    SESSION_SAVE_EVERY_REQUEST = True
    SESSION_COOKIE_AGE = 480 * 60

SESSION_COOKIE_NAME = '{}-tabs'.format(BUILD_ENV.lower())

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '#REDACTED#'

# SECURITY WARNING: don't run with debug turned on in production!
if BUILD_ENV == "LOCAL" or BUILD_ENV == "DEV":
    DEBUG = True
    ALLOWED_HOSTS = ['#REDACTED#']
    ALLOW_TEST_USER = True
    AD_WS_URL = '#REDACTED#'
    TBADGE_WS_URL = '#REDACTED#'
elif BUILD_ENV == "QA":
    DEBUG = False
    ALLOWED_HOSTS = ['#REDACTED#']
    ALLOW_TEST_USER = True
    AD_WS_URL = '#REDACTED#'
    TBADGE_WS_URL = '#REDACTED#'
elif BUILD_ENV == "STG":
    DEBUG = False
    ALLOWED_HOSTS = ['#REDACTED#']
    ALLOW_TEST_USER = True
    AD_WS_URL = '#REDACTED#'
    TBADGE_WS_URL = '#REDACTED#'
elif BUILD_ENV == "PROD":
    DEBUG = False
    ALLOWED_HOSTS = ['#REDACTED#']
    ALLOW_TEST_USER = False
    AD_WS_URL = '#REDACTED#'
    TBADGE_WS_URL = '#REDACTED#'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tbadge_portal'
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tbadge.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'tbadge_portal.context_processors.version_number',
                'tbadge_portal.context_processors.webservice_url',
                'tbadge_portal.context_processors.under_construction',
            ],
        },
    },
]

WSGI_APPLICATION = 'tbadge.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

SQLITE_DIR = BASE_DIR + "/../../TabsWebAppSQLite/"

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(SQLITE_DIR, 'db.sqlite3'),
    }
}
if BUILD_ENV == "LOCAL":
    DATABASES["default"]["NAME"] = os.path.join(BASE_DIR, 'db.sqlite3')


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'US/Pacific'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'


# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(funcName)s %(name)s %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'default': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        'django': {
            'handlers': ['default'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['default'],
            'level': 'DEBUG',
            'propagate': False,
        },
        'tbadge_portal': {
            'handlers': ['default'],
            'level': 'INFO',
            'propagate': False,
        }
    }
}

if BUILD_ENV != "LOCAL":
    LOGGING["handlers"]["default"]["class"] = 'logging.FileHandler'
    LOGGING["handlers"]["default"]["filename"] = '#REDACTED'
